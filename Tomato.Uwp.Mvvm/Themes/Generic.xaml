<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Tomato.Uwp.Mvvm.Controls">

    <Style TargetType="controls:HamburgerMenuButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="48" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:HamburgerMenuButton">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="HoverOverlay.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="PressedOverlay.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="PressedOverlay" Fill="White"
                                           Opacity=".4" Visibility="Collapsed" />
                        <Rectangle x:Name="HoverOverlay" Fill="White"
                                           Opacity=".2" Visibility="Collapsed" />
                        <FontIcon x:Name="ContentPresenter" FontSize="20"
                                          Foreground="{TemplateBinding Foreground}"
                                          Glyph="&#xE700;" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="48" />
    </Style>

    <Style TargetType="controls:HamburgerMenu">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:HamburgerMenu">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <SplitView x:Name="PART_SplitView" DisplayMode="CompactInline"
                                       PaneBackground="{ThemeResource SystemControlDisabledChromeMediumLowBrush}"
                                       CompactPaneLength="48" OpenPaneLength="200"
                                       Content="{TemplateBinding Content}">
                                <SplitView.Pane>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <controls:HamburgerMenuButton x:Name="PART_HamburgerButton"/>
                                        <Border Grid.Row="1" Child="{TemplateBinding Pane}"/>
                                    </Grid>
                                </SplitView.Pane>
                            </SplitView>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="WindowSizeStates">
                                <VisualState x:Name="WideState">
                                    <VisualState.Setters>
                                        <Setter Target="PART_SplitView.DisplayMode" Value="CompactInline" />
                                        <Setter Target="PART_SplitView.IsPaneOpen" Value="True" />
                                    </VisualState.Setters>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="900" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState x:Name="NarrowState">
                                    <VisualState.Setters>
                                        <Setter Target="PART_SplitView.DisplayMode" Value="CompactOverlay" />
                                        <Setter Target="PART_SplitView.IsPaneOpen" Value="False" />
                                    </VisualState.Setters>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="600" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState x:Name="TinyState">
                                    <VisualState.Setters>
                                        <Setter Target="PART_SplitView.DisplayMode" Value="Overlay" />
                                        <Setter Target="PART_SplitView.IsPaneOpen" Value="False" />
                                    </VisualState.Setters>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="0" />
                                    </VisualState.StateTriggers>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
