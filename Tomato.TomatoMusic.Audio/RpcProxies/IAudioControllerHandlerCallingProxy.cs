//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Tomato.TomatoMusic.RpcPackets.IAudioControllerHandler;

namespace Tomato.TomatoMusic.RpcCallingProxies
{
	sealed class IAudioControllerHandlerRpcCallingProxy : Tomato.TomatoMusic.Core.IAudioControllerHandler, global::Tomato.Rpc.Core.IPacketReceiver
	{
		private readonly global::Tomato.Rpc.Core.IPacketSender _packetSender;

		public IAudioControllerHandlerRpcCallingProxy(global::Tomato.Rpc.Core.IPacketSender packetSender)
		{
			_packetSender = packetSender;
		}

		void global::Tomato.Rpc.Core.IPacketReceiver.OnReceive(object packet)
		{
		}

		public void NotifyControllerReady()
		{
			var packet = new Void_20NotifyControllerReady_28_29
			{
			};
			_packetSender.Send(packet);
		}

		public void NotifyMediaOpened()
		{
			var packet = new Void_20NotifyMediaOpened_28_29
			{
			};
			_packetSender.Send(packet);
		}

		public void NotifyControllerStateChanged(Windows.Media.Playback.MediaPlayerState state)
		{
			var packet = new Void_20NotifyControllerStateChanged_28Windows_Media_Playback_MediaPlayerState_29
			{
				Arg0 = state,
			};
			_packetSender.Send(packet);
		}

		public void NotifyCurrentTrackChanged(Tomato.TomatoMusic.Primitives.TrackInfo track)
		{
			var packet = new Void_20NotifyCurrentTrackChanged_28Tomato_TomatoMusic_Primitives_TrackInfo_29
			{
				Arg0 = track,
			};
			_packetSender.Send(packet);
		}

		public void NotifyDuration(System.Nullable<System.TimeSpan> duration)
		{
			var packet = new Void_20NotifyDuration_28System_Nullable_601_5BSystem_TimeSpan_5D_29
			{
				Arg0 = duration,
			};
			_packetSender.Send(packet);
		}

		public void NotifyPosition(System.TimeSpan position)
		{
			var packet = new Void_20NotifyPosition_28System_TimeSpan_29
			{
				Arg0 = position,
			};
			_packetSender.Send(packet);
		}

		public void NotifySeekCompleted()
		{
			var packet = new Void_20NotifySeekCompleted_28_29
			{
			};
			_packetSender.Send(packet);
		}

	}
}

